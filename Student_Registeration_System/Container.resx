<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPxWAQD8VgEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEDAgABBAIAAQQCAAEBAgABAAIA
        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAEAAgABSwIA
        AXACAAFrAgABFQIAAQACAAEBAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgABAAIAAQACAAEBAgABAQIA
        AQACAAEAAgACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIA
        AQACAAGxAgAB/wIAAf8CAAEwAgABAAIAAQQCAAEAAgABAAIAAQAAAAAAAgABAAIAAQACAAEAAgABAQIA
        AQICAAECAgABAQIAAQACAAEAAgABAAAAAAACAAEAAgABAAIAAQACAAEBAgABAgIAAQACAAEAAAAAAAAA
        AAAAAAAAAgABAAIAAaECAAH/AgAB9AIAASQCAAEAAgABAwIAAQQCAAEDAgABAgIAAQICAAECAgABBAIA
        AQUCAAEAAgABEQIAARECAAEAAgABBQIAAQQCAAECAgABAgIAAQICAAEDAgABBAIAAQECAAEAAgABAAAA
        AAAAAAAAAAAAAAAAAAACAAEAAgABigIAAf8CAAHsAgABDQIAASwCAAEXAgABAAIAAQEDAAAAAAAAAAAA
        AAACAAEBAgABAAIAAQUCAAGqAgABqwIAAQUCAAEAAgABAQMAAAAAAAAAAwAAAAIAAQECAAEAAgABFQIA
        ATECAAEAAgABAQAAAAAAAAAAAAAAAAIAAQACAAFiAgAB/wIAAdMCAAEAAgABhQIAAfICAAGDAgABTQIA
        ATACAAEpAgABMgIAAU0CAAGIAgAB5AIAAf8CAAH/AgAB5AIAAYgCAAFNAgABMgIAASkCAAEwAgABTQIA
        AYMCAAHxAgABhgIAAQACAAEEAAAAAAAAAAAAAAAAAgABAAIAATMCAAH/AgABqgIAAQACAAGDAgAB/wIA
        AfsCAAH/AgAB/wIAAfwCAAH+AgAB/wIAAf8CAAH2AgABmAIAAZcCAAH2AgAB/wIAAf8CAAH+AgAB/AIA
        Af8CAAH/AgAB+wIAAf8CAAGBAgABAAIAAQQAAAAAAAAAAAAAAAACAAEAAgABrwIAAf8CAAH7AgABKgIA
        AXcCAAH/AgAB9QIAAfgCAAH+AgAB/wIAAf8CAAHTAgABbwIAAToCAAFtAgABbQIAATkCAAFuAgAB0gIA
        Af8CAAH/AgAB/gIAAfgCAAH1AgAB/wIAAYMCAAEAAgABBAAAAAAAAAAAAAAAAAIAARcCAAHtAgAB/wIA
        Af8CAAFoAgABbQIAAf8CAAH6AgAB/wIAAfgCAAGqAgABUAIAAUQCAAGQAgAB7AIAAf8CAAH/AgAB7AIA
        AZACAAFDAgABTwIAAakCAAH4AgAB/wIAAfoCAAH/AgABgQIAAQACAAEEAAAAAAAAAAAAAAAAAgABAAIA
        AZgCAAH/AgAB7QIAARkCAAF6AgAB/wIAAdoCAAF9AgABPgIAAV4CAAG+AgAB/gIAAf8CAAH/AgAB+wIA
        AfsCAAH/AgAB/wIAAf4CAAG/AgABXgIAAT0CAAF8AgAB2QIAAf8CAAGEAgABAAIAAQQCAAEAAgABAAAA
        AAACAAECAgABAAIAAZQCAAE6AgABAAIAAVICAAFnAgABPAIAAYUCAAHlAgAB/wIAAf4CAAH9AgAB+wIA
        Af4CAAH/AgAB/wIAAf4CAAH7AgAB/QIAAf4CAAH/AgAB5QIAAYYCAAE9AgABZQIAAVACAAEAAgABBgIA
        AQICAAEAAgABAAIAAQcCAAEAAgABegIAASICAAEGAgABVwIAAbMCAAH7AgAB/wIAAf8CAAH8AgAB/AIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/AIAAfwCAAH/AgAB/wIAAfsCAAG0AgABVwIA
        AQ8CAAEAAgABAAIAAQICAAEDAgABAwIAAQACAAGGAgABqAIAAeECAAH/AgAB/gIAAf4CAAH7AgAB/gIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf4CAAH7AgAB/gIA
        Af4CAAH/AgAB6AIAAY4CAAEpAgABAAIAAQECAAFOAgABywIAAf8CAAH/AgAB/wIAAfsCAAH8AgAB/wIA
        Af8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/AIAAfsCAAH/AgAB/gIAAf8CAAHMAgABTwIAAS4CAAGIAgAB3wIAAf8CAAH/AgAB/gIA
        AfsCAAH9AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAf0CAAH7AgAB/gIAAf8CAAH/AgAB3gIAAYkCAAEvAgABAAIAAQACAAEHAgABTgIA
        AbYCAAH6AgAB/wIAAf8CAAH8AgAB/AIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/wIAAfwCAAH8AgAB/wIAAf8CAAH6AgABtwIAAU4CAAEHAgABAAIAAQACAAECAgABBAIA
        AQECAAEAAgABAAIAASYCAAGIAgAB5AIAAf8CAAH+AgAB/gIAAfsCAAH+AgAB/wIAAf8CAAH/AgAB/wIA
        Af8CAAH/AgAB/gIAAfsCAAH+AgAB/gIAAf8CAAHlAgABiAIAASYCAAEAAgABAAIAAQECAAEEAgABAgIA
        AQACAAEAAgABAQIAAQQCAAECAgABAAIAAQACAAELAgABWAIAAcACAAH9AgAB/wIAAf8CAAH8AgAB/AIA
        Af8CAAH/AgAB/AIAAfwCAAH/AgAB/wIAAf0CAAHBAgABWQIAAQsCAAEAAgABAAIAAQICAAEEAgABAQIA
        AQACAAEAAAAAAAIAAQACAAEAAgABAAIAAQACAAECAgABBAIAAQECAAEAAgABAAIAAS4CAAGTAgAB6wIA
        Af8CAAH/AgAB/QIAAf0CAAH/AgAB/wIAAesCAAGUAgABLwIAAQACAAEAAgABAQIAAQQCAAECAgABAAIA
        AQACAAEAAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgABAAIAAQACAAEAAgABAQIAAQQCAAECAgABAAIA
        AQACAAEQAgABYwIAAcoCAAH/AgAB/wIAAcoCAAFkAgABEAIAAQACAAEAAgABAgIAAQQCAAEBAgABAAIA
        AQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEAAgABAAIA
        AQACAAEDAgABBAIAAQABAAIAAgABAAIAAT4CAAE/AgABAAEAAQACAAEAAgABBAIAAQMCAAEAAgABAAIA
        AQACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAABAAEAAgABAAIAAQACAAEAAgABAQIAAQQCAAECAgABAAIAAQACAAECAgABBAIAAQECAAEAAgABAAIA
        AQABAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAQACAAEAAgABAAIAAQACAAEDAgABAwIAAQACAAEAAgABAAIA
        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////////////////////4X/////////hfpf/4V0LpeEAkAvgXQul4gA
        ABeIAAAXgAAAFwAAABeAAAARSAAAEUAAAAhAAAACAAAAAAAAAABAAAACCAAAEEIAAELQQAIL+hAIX/6G
        YX//kYn///Qv//////////////////////8=
</value>
  </data>
</root>